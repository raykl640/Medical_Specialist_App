rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    

match /clinics/{clinicId} {
  allow read, write: if request.auth != null;
}

    // Appointments collection
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.patientId || 
         request.auth.uid == resource.data.doctorId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.patientId;
    }
    
    // Medical records - only accessible by the patient and their doctors
    match /medical_records/{recordId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.patientId ||
         request.auth.uid in resource.data.authorizedDoctors ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Doctors collection - public read, but only doctors can write their own data
    match /doctors/{doctorId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (request.auth.uid == doctorId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Contact messages - users can create, admins can read
    match /contact_messages/{messageId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Public content like services, announcements
    match /public/{document=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}